import nodemailer from 'nodemailer';


// console.log("üîç Email Env:", process.env.EMAIL_USER, process.env.EMAIL_PASS); // üëâ ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø


// üî¥ Transporter ‡¶¨‡¶æ‡¶á‡¶∞‡ßá ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßÅ‡¶®, ‡¶Ø‡¶æ‡¶§‡ßá ‡¶è‡¶ü‡¶ø ‡¶∞‡¶ø-‡¶á‡¶â‡¶ú ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡ßü
const transporter = nodemailer.createTransport({
    service: 'gmail', // ‡¶Ö‡¶•‡¶¨‡¶æ ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶π‡ßã‡¶∏‡ßç‡¶ü, ‡¶™‡ßã‡¶∞‡ßç‡¶ü ‡¶á‡¶§‡ßç‡¶Ø‡¶æ‡¶¶‡¶ø
    auth: {
        user: process.env.EMAIL_USER,
        pass: process.env.EMAIL_PASS, // ‡¶®‡¶ø‡¶∂‡ßç‡¶ö‡¶ø‡¶§ ‡¶ï‡¶∞‡ßÅ‡¶® ‡¶è‡¶ü‡¶ø App Password
    },
});

// üî¥ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®‡¶ü‡¶ø ‡¶è‡¶ñ‡¶® ‡¶è‡¶ï‡¶ü‡¶ø options ‡¶Ö‡¶¨‡¶ú‡ßá‡¶ï‡ßç‡¶ü ‡¶ó‡ßç‡¶∞‡¶π‡¶£ ‡¶ï‡¶∞‡¶õ‡ßá
export const sendEmail = async (options) => {
    try {
        const mailOptions = {
            from: `"Clabar Team" <${process.env.EMAIL_USER}>`,
            to: options.to,
            subject: options.subject,
            html: options.html,
        };

        await transporter.sendMail(mailOptions);
        console.log('Email sent successfully to:', options.to);

    } catch (error) {
        console.error('Error sending email:', error);
        throw error; // ‡¶è‡¶∞‡¶∞‡¶ü‡¶ø ‡¶ï‡¶®‡ßç‡¶ü‡ßç‡¶∞‡ßã‡¶≤‡¶æ‡¶∞‡ßá‡¶∞ ‡¶ï‡¶æ‡¶õ‡ßá ‡¶™‡¶æ‡¶†‡¶ø‡ßü‡ßá ‡¶¶‡¶ø‡¶®
    }
};