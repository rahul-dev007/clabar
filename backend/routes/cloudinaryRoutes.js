import express from 'express';
import { v2 as cloudinary } from 'cloudinary';
import authMiddleware from '../middleware/authMiddleware.js';

// Cloudinary ржХржиржлрж┐ржЧрж╛рж░рзЗрж╢ржи
cloudinary.config({
    cloud_name: process.env.CLOUDINARY_CLOUD_NAME,
    api_key: process.env.CLOUDINARY_API_KEY,
    api_secret: process.env.CLOUDINARY_API_SECRET,
    secure: true,
});

const router = express.Router();

// ржПржЗ рж░рж╛ржЙржЯржЯрж┐ GET рж░рж┐ржХрзЛрзЯрзЗрж╕рзНржЯ рж╣рзНржпрж╛ржирзНржбрзЗрж▓ ржХрж░ржмрзЗ
router.get('/signature', authMiddleware, (req, res) => {
    console.log("тЬЕ /api/cloudinary/signature рж░рж╛ржЙржЯрзЗ рж░рж┐ржХрзЛрзЯрзЗрж╕рзНржЯ ржПрж╕рзЗржЫрзЗ!"); // ЁЯСИ ржбрж┐ржмрж╛ржЧрж┐ржВ ржПрж░ ржЬржирзНржп ржПржЯрж┐ ржпрзЛржЧ ржХрж░рзБржи

    try {
        const timestamp = Math.round(new Date().getTime() / 1000);

        const signature = cloudinary.utils.api_sign_request(
            {
                timestamp: timestamp,
                folder: 'clabar_profiles', // (ржРржЪрзНржЫрж┐ржХ) ржЖржкрж▓рзЛржбржЧрзБрж▓рзЛ ржПржХржЯрж┐ ржлрзЛрж▓рзНржбрж╛рж░рзЗ ржпрж╛ржмрзЗ
            },
            process.env.CLOUDINARY_API_SECRET
        );

        // тЬЕ ржПржЗ рж▓рж╛ржЗржиржЯрж┐ 200 OK рж░рзЗрж╕ржкржирзНрж╕ ржкрж╛ржарж╛рзЯ, ржпрж╛ 501 ржПрж░рж░ржЯрж┐ржХрзЗ ржкрзНрж░рждрж┐рж░рзЛржз ржХрж░рзЗ
        res.status(200).json({ timestamp, signature });

    } catch (error) {
        console.error('тЭМ Cloudinary рж╕рж┐ржЧржирзЗржЪрж╛рж░ рждрзИрж░рж┐рждрзЗ ржПрж░рж░:', error);
        res.status(500).json({ msg: 'Server error while creating signature.' });
    }
});

export default router;