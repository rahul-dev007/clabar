// src/app/api/cloudinary-signature/route.ts

import { NextRequest, NextResponse } from 'next/server';
import { getToken } from 'next-auth/jwt';

export async function GET(req: NextRequest) {
    try {
        // ‡¶ß‡¶æ‡¶™ ‡ßß: ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡¶ï‡¶æ‡¶∞‡ßÄ ‡¶≤‡¶ó‡¶á‡¶® ‡¶ï‡¶∞‡¶æ ‡¶Ü‡¶õ‡ßá ‡¶ï‡¶ø‡¶®‡¶æ ‡¶§‡¶æ ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡ßÅ‡¶®
        const token = await getToken({
            req,
            secret: process.env.NEXTAUTH_SECRET,
            // ‡¶ï‡ßÅ‡¶ï‡¶ø ‡¶∏‡¶†‡¶ø‡¶ï‡¶≠‡¶æ‡¶¨‡ßá ‡¶™‡ßú‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶è‡¶á ‡¶Ö‡¶™‡¶∂‡¶®‡¶ó‡ßÅ‡¶≤‡ßã ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ ‡¶≠‡¶æ‡¶≤‡ßã
            secureCookie: process.env.NODE_ENV === 'production',
            cookieName: process.env.NODE_ENV === 'production'
                ? '__Secure-next-auth.session-token'
                : 'next-auth.session-token',
        });

        // ‡¶Ø‡¶¶‡¶ø ‡¶ü‡ßã‡¶ï‡ßá‡¶® ‡¶®‡¶æ ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü, ‡¶§‡¶æ‡¶π‡¶≤‡ßá Unauthorized ‡¶è‡¶∞‡¶∞ ‡¶¶‡¶ø‡¶®
        if (!token) {
            return new NextResponse(JSON.stringify({ message: 'Unauthorized' }), {
                status: 401,
                headers: { 'Content-Type': 'application/json' },
            });
        }

        // ‡¶ß‡¶æ‡¶™ ‡ß®: ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ï‡¶è‡¶®‡ßç‡¶° API-‡¶ï‡ßá ‡¶ï‡¶≤ ‡¶ï‡¶∞‡ßÅ‡¶® ‡¶è‡¶¨‡¶Ç ‡¶ï‡ßÅ‡¶ï‡¶ø ‡¶´‡¶∞‡ßã‡¶Ø‡¶º‡¶æ‡¶∞‡ßç‡¶° ‡¶ï‡¶∞‡ßÅ‡¶®
        // üî¥ ‡¶è‡¶ü‡¶ø‡¶á ‡¶Æ‡ßÇ‡¶≤ ‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶®: ‡¶Ü‡¶Æ‡¶∞‡¶æ 'Cookie' ‡¶π‡ßá‡¶°‡¶æ‡¶∞‡¶ü‡¶ø ‡¶Æ‡ßç‡¶Ø‡¶æ‡¶®‡ßÅ‡ßü‡¶æ‡¶≤‡¶ø ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶õ‡¶ø
        const response = await fetch(`${process.env.NEXT_PUBLIC_API_BASE_URL}/api/cloudinary/signature`, {
            headers: {
                // ‡¶´‡ßç‡¶∞‡¶®‡ßç‡¶ü‡¶è‡¶®‡ßç‡¶° ‡¶•‡ßá‡¶ï‡ßá ‡¶Ü‡¶∏‡¶æ ‡¶ï‡ßÅ‡¶ï‡¶ø‡¶ó‡ßÅ‡¶≤‡ßã ‡¶ï‡¶™‡¶ø ‡¶ï‡¶∞‡ßá ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ï‡¶è‡¶®‡ßç‡¶°‡ßá ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã ‡¶π‡¶ö‡ßç‡¶õ‡ßá
                'Cookie': req.headers.get('cookie') || '',
            },
        });

        // ‡¶Ø‡¶¶‡¶ø ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ï‡¶è‡¶®‡ßç‡¶° ‡¶•‡ßá‡¶ï‡ßá ‡¶ï‡ßã‡¶®‡ßã ‡¶è‡¶∞‡¶∞ ‡¶Ü‡¶∏‡ßá
        if (!response.ok) {
            const errorText = await response.text();
            console.error('Backend signature fetch failed:', response.status, errorText);
            throw new Error('Failed to fetch signature from backend');
        }

        // ‡¶Ø‡¶¶‡¶ø ‡¶∏‡¶¨‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶†‡¶ø‡¶ï ‡¶•‡¶æ‡¶ï‡ßá, ‡¶§‡¶æ‡¶π‡¶≤‡ßá ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ï‡¶è‡¶®‡ßç‡¶°‡ßá‡¶∞ ‡¶°‡ßá‡¶ü‡¶æ ‡¶´‡ßá‡¶∞‡¶§ ‡¶¶‡¶ø‡¶®
        const data = await response.json();
        return NextResponse.json(data);

    } catch (error: any) {
        console.error("Signature API route error:", error.message);
        return new NextResponse(JSON.stringify({ message: 'Internal Server Error' }), {
            status: 500,
            headers: { 'Content-Type': 'application/json' },
        });
    }
}